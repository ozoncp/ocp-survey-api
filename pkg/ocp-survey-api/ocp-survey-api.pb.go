// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/ocp-survey-api/ocp-survey-api.proto

package ocp_survey_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Описание опроса
type Survey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Link   string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Survey) Reset() {
	*x = Survey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Survey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Survey) ProtoMessage() {}

func (x *Survey) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Survey.ProtoReflect.Descriptor instead.
func (*Survey) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{0}
}

func (x *Survey) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Survey) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Survey) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type CreateSurveyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Link   string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *CreateSurveyV1Request) Reset() {
	*x = CreateSurveyV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSurveyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurveyV1Request) ProtoMessage() {}

func (x *CreateSurveyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurveyV1Request.ProtoReflect.Descriptor instead.
func (*CreateSurveyV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSurveyV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateSurveyV1Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type CreateSurveyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyId uint64 `protobuf:"varint,1,opt,name=survey_id,json=surveyId,proto3" json:"survey_id,omitempty"`
}

func (x *CreateSurveyV1Response) Reset() {
	*x = CreateSurveyV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSurveyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurveyV1Response) ProtoMessage() {}

func (x *CreateSurveyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurveyV1Response.ProtoReflect.Descriptor instead.
func (*CreateSurveyV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSurveyV1Response) GetSurveyId() uint64 {
	if x != nil {
		return x.SurveyId
	}
	return 0
}

type MultiCreateSurveyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Surveys []*CreateSurveyV1Request `protobuf:"bytes,1,rep,name=surveys,proto3" json:"surveys,omitempty"`
}

func (x *MultiCreateSurveyV1Request) Reset() {
	*x = MultiCreateSurveyV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateSurveyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateSurveyV1Request) ProtoMessage() {}

func (x *MultiCreateSurveyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateSurveyV1Request.ProtoReflect.Descriptor instead.
func (*MultiCreateSurveyV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{3}
}

func (x *MultiCreateSurveyV1Request) GetSurveys() []*CreateSurveyV1Request {
	if x != nil {
		return x.Surveys
	}
	return nil
}

type MultiCreateSurveyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyIds []uint64 `protobuf:"varint,1,rep,packed,name=survey_ids,json=surveyIds,proto3" json:"survey_ids,omitempty"`
}

func (x *MultiCreateSurveyV1Response) Reset() {
	*x = MultiCreateSurveyV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateSurveyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateSurveyV1Response) ProtoMessage() {}

func (x *MultiCreateSurveyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateSurveyV1Response.ProtoReflect.Descriptor instead.
func (*MultiCreateSurveyV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{4}
}

func (x *MultiCreateSurveyV1Response) GetSurveyIds() []uint64 {
	if x != nil {
		return x.SurveyIds
	}
	return nil
}

type DescribeSurveyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyId uint64 `protobuf:"varint,1,opt,name=survey_id,json=surveyId,proto3" json:"survey_id,omitempty"`
}

func (x *DescribeSurveyV1Request) Reset() {
	*x = DescribeSurveyV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSurveyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSurveyV1Request) ProtoMessage() {}

func (x *DescribeSurveyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSurveyV1Request.ProtoReflect.Descriptor instead.
func (*DescribeSurveyV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSurveyV1Request) GetSurveyId() uint64 {
	if x != nil {
		return x.SurveyId
	}
	return 0
}

type DescribeSurveyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Survey *Survey `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *DescribeSurveyV1Response) Reset() {
	*x = DescribeSurveyV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSurveyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSurveyV1Response) ProtoMessage() {}

func (x *DescribeSurveyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSurveyV1Response.ProtoReflect.Descriptor instead.
func (*DescribeSurveyV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeSurveyV1Response) GetSurvey() *Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type ListSurveysV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListSurveysV1Request) Reset() {
	*x = ListSurveysV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSurveysV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSurveysV1Request) ProtoMessage() {}

func (x *ListSurveysV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSurveysV1Request.ProtoReflect.Descriptor instead.
func (*ListSurveysV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{7}
}

func (x *ListSurveysV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSurveysV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListSurveysV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Surveys []*Survey `protobuf:"bytes,1,rep,name=surveys,proto3" json:"surveys,omitempty"`
}

func (x *ListSurveysV1Response) Reset() {
	*x = ListSurveysV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSurveysV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSurveysV1Response) ProtoMessage() {}

func (x *ListSurveysV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSurveysV1Response.ProtoReflect.Descriptor instead.
func (*ListSurveysV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{8}
}

func (x *ListSurveysV1Response) GetSurveys() []*Survey {
	if x != nil {
		return x.Surveys
	}
	return nil
}

type UpdateSurveyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Survey *Survey `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *UpdateSurveyV1Request) Reset() {
	*x = UpdateSurveyV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSurveyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurveyV1Request) ProtoMessage() {}

func (x *UpdateSurveyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurveyV1Request.ProtoReflect.Descriptor instead.
func (*UpdateSurveyV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSurveyV1Request) GetSurvey() *Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type UpdateSurveyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSurveyV1Response) Reset() {
	*x = UpdateSurveyV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSurveyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurveyV1Response) ProtoMessage() {}

func (x *UpdateSurveyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurveyV1Response.ProtoReflect.Descriptor instead.
func (*UpdateSurveyV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{10}
}

type RemoveSurveyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyId uint64 `protobuf:"varint,1,opt,name=survey_id,json=surveyId,proto3" json:"survey_id,omitempty"`
}

func (x *RemoveSurveyV1Request) Reset() {
	*x = RemoveSurveyV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSurveyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSurveyV1Request) ProtoMessage() {}

func (x *RemoveSurveyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSurveyV1Request.ProtoReflect.Descriptor instead.
func (*RemoveSurveyV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveSurveyV1Request) GetSurveyId() uint64 {
	if x != nil {
		return x.SurveyId
	}
	return 0
}

type RemoveSurveyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSurveyV1Response) Reset() {
	*x = RemoveSurveyV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSurveyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSurveyV1Response) ProtoMessage() {}

func (x *RemoveSurveyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSurveyV1Response.ProtoReflect.Descriptor instead.
func (*RemoveSurveyV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP(), []int{12}
}

var File_api_ocp_survey_api_ocp_survey_api_proto protoreflect.FileDescriptor

var file_api_ocp_survey_api_ocp_survey_api_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2d,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x06, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x22, 0x44, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x64, 0x22, 0x5d,
	0x0a, 0x1a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x22, 0x3c, 0x0a,
	0x1b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x17, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x08, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x52, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x22, 0x44, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x49,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x52, 0x07, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x06, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x08, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8e, 0x06, 0x0a, 0x0c, 0x4f, 0x63, 0x70, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x41, 0x70, 0x69, 0x12, 0x77, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22,
	0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x8c, 0x01, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x12, 0x2a, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x86,
	0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f,
	0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x6f,
	0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x1a, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6f, 0x63, 0x70, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x7a, 0x6f, 0x6e, 0x63, 0x70, 0x2f, 0x6f, 0x63, 0x70, 0x2d,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6f,
	0x63, 0x70, 0x2d, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x6f, 0x63,
	0x70, 0x5f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_ocp_survey_api_ocp_survey_api_proto_rawDescOnce sync.Once
	file_api_ocp_survey_api_ocp_survey_api_proto_rawDescData = file_api_ocp_survey_api_ocp_survey_api_proto_rawDesc
)

func file_api_ocp_survey_api_ocp_survey_api_proto_rawDescGZIP() []byte {
	file_api_ocp_survey_api_ocp_survey_api_proto_rawDescOnce.Do(func() {
		file_api_ocp_survey_api_ocp_survey_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_ocp_survey_api_ocp_survey_api_proto_rawDescData)
	})
	return file_api_ocp_survey_api_ocp_survey_api_proto_rawDescData
}

var file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_ocp_survey_api_ocp_survey_api_proto_goTypes = []interface{}{
	(*Survey)(nil),                      // 0: ocp.survey.api.Survey
	(*CreateSurveyV1Request)(nil),       // 1: ocp.survey.api.CreateSurveyV1Request
	(*CreateSurveyV1Response)(nil),      // 2: ocp.survey.api.CreateSurveyV1Response
	(*MultiCreateSurveyV1Request)(nil),  // 3: ocp.survey.api.MultiCreateSurveyV1Request
	(*MultiCreateSurveyV1Response)(nil), // 4: ocp.survey.api.MultiCreateSurveyV1Response
	(*DescribeSurveyV1Request)(nil),     // 5: ocp.survey.api.DescribeSurveyV1Request
	(*DescribeSurveyV1Response)(nil),    // 6: ocp.survey.api.DescribeSurveyV1Response
	(*ListSurveysV1Request)(nil),        // 7: ocp.survey.api.ListSurveysV1Request
	(*ListSurveysV1Response)(nil),       // 8: ocp.survey.api.ListSurveysV1Response
	(*UpdateSurveyV1Request)(nil),       // 9: ocp.survey.api.UpdateSurveyV1Request
	(*UpdateSurveyV1Response)(nil),      // 10: ocp.survey.api.UpdateSurveyV1Response
	(*RemoveSurveyV1Request)(nil),       // 11: ocp.survey.api.RemoveSurveyV1Request
	(*RemoveSurveyV1Response)(nil),      // 12: ocp.survey.api.RemoveSurveyV1Response
}
var file_api_ocp_survey_api_ocp_survey_api_proto_depIdxs = []int32{
	1,  // 0: ocp.survey.api.MultiCreateSurveyV1Request.surveys:type_name -> ocp.survey.api.CreateSurveyV1Request
	0,  // 1: ocp.survey.api.DescribeSurveyV1Response.survey:type_name -> ocp.survey.api.Survey
	0,  // 2: ocp.survey.api.ListSurveysV1Response.surveys:type_name -> ocp.survey.api.Survey
	0,  // 3: ocp.survey.api.UpdateSurveyV1Request.survey:type_name -> ocp.survey.api.Survey
	1,  // 4: ocp.survey.api.OcpSurveyApi.CreateSurveyV1:input_type -> ocp.survey.api.CreateSurveyV1Request
	3,  // 5: ocp.survey.api.OcpSurveyApi.MultiCreateSurveyV1:input_type -> ocp.survey.api.MultiCreateSurveyV1Request
	5,  // 6: ocp.survey.api.OcpSurveyApi.DescribeSurveyV1:input_type -> ocp.survey.api.DescribeSurveyV1Request
	7,  // 7: ocp.survey.api.OcpSurveyApi.ListSurveysV1:input_type -> ocp.survey.api.ListSurveysV1Request
	9,  // 8: ocp.survey.api.OcpSurveyApi.UpdateSurveyV1:input_type -> ocp.survey.api.UpdateSurveyV1Request
	11, // 9: ocp.survey.api.OcpSurveyApi.RemoveSurveyV1:input_type -> ocp.survey.api.RemoveSurveyV1Request
	2,  // 10: ocp.survey.api.OcpSurveyApi.CreateSurveyV1:output_type -> ocp.survey.api.CreateSurveyV1Response
	4,  // 11: ocp.survey.api.OcpSurveyApi.MultiCreateSurveyV1:output_type -> ocp.survey.api.MultiCreateSurveyV1Response
	6,  // 12: ocp.survey.api.OcpSurveyApi.DescribeSurveyV1:output_type -> ocp.survey.api.DescribeSurveyV1Response
	8,  // 13: ocp.survey.api.OcpSurveyApi.ListSurveysV1:output_type -> ocp.survey.api.ListSurveysV1Response
	10, // 14: ocp.survey.api.OcpSurveyApi.UpdateSurveyV1:output_type -> ocp.survey.api.UpdateSurveyV1Response
	12, // 15: ocp.survey.api.OcpSurveyApi.RemoveSurveyV1:output_type -> ocp.survey.api.RemoveSurveyV1Response
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_ocp_survey_api_ocp_survey_api_proto_init() }
func file_api_ocp_survey_api_ocp_survey_api_proto_init() {
	if File_api_ocp_survey_api_ocp_survey_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Survey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSurveyV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSurveyV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateSurveyV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateSurveyV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSurveyV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSurveyV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSurveysV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSurveysV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSurveyV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSurveyV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSurveyV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSurveyV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_ocp_survey_api_ocp_survey_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ocp_survey_api_ocp_survey_api_proto_goTypes,
		DependencyIndexes: file_api_ocp_survey_api_ocp_survey_api_proto_depIdxs,
		MessageInfos:      file_api_ocp_survey_api_ocp_survey_api_proto_msgTypes,
	}.Build()
	File_api_ocp_survey_api_ocp_survey_api_proto = out.File
	file_api_ocp_survey_api_ocp_survey_api_proto_rawDesc = nil
	file_api_ocp_survey_api_ocp_survey_api_proto_goTypes = nil
	file_api_ocp_survey_api_ocp_survey_api_proto_depIdxs = nil
}
